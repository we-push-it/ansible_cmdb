---

- name: "Copy JS files to Webserver"
  ansible.builtin.copy:
    src: ../templates/js/
    dest: "{{ ansible_cmdb_webserver_path }}/js/"
    owner: "{{ ansible_cmdb_webserver_owner }}"
    group: "{{ ansible_cmdb_webserver_group }}"
    mode: "{{ ansible_cmdb_webserver_mode_folder }}"
  become: true
  when: ansible_host == ansible_cmdb_webserver_hostname
  delegate_to: "{{ ansible_cmdb_webserver_hostname }}"

- name: "Copy SVG files to Webserver"
  ansible.builtin.copy:
    src: ../templates/svg/
    dest: "{{ ansible_cmdb_webserver_path }}/svg/"
    owner: "{{ ansible_cmdb_webserver_owner }}"
    group: "{{ ansible_cmdb_webserver_group }}"
    mode: "{{ ansible_cmdb_webserver_mode_folder }}"
  become: true
  when: ansible_host == ansible_cmdb_webserver_hostname
  delegate_to: "{{ ansible_cmdb_webserver_hostname }}"


# TODO: Change to loop for all reports in a directory
# TODO: Reformat JSON to simple structure and remove unnecessary items
# - name: "Get sysinfos"
#   ansible.builtin.set_fact:
#     ansible_cmdb_report: "{{ ansible_cmdb_report | default([]) + ansible_facts | dict2items }}"
#   when: ansible_cmdb_report_sysinfos

- name: Run reports
  ansible.builtin.include_tasks: "{{ item }}"
  loop: "{{ query('ansible.builtin.fileglob', 'reports/*.yaml') }}"
  loop_control:
    label: "{{ item }}"

- name: Run custom reports
  ansible.builtin.include_tasks: "{{ item }}"
  loop: "{{ query('ansible.builtin.fileglob', 'reports/custom_reports/*.yaml') }}"
  loop_control:
    label: "{{ item }}"


# - name: "Debugging output 1"
#   ansible.builtin.debug:
#     var: ansible_cmdb_report_output_sysinfo


# - name: "Debugging output 2"
#   ansible.builtin.debug:
#     var: lookup('vars', item)
#   loop: "{{ hostvars[inventory_hostname].keys() | select('match', '^ansible_cmdb_report_output_.*$') | list }}"

- name: "Merging output"
  ansible.builtin.set_fact:
    ansible_cmdb_report: "{{ ansible_cmdb_report | default([]) + lookup('vars', item) }}"
  loop: "{{ hostvars[inventory_hostname].keys() | select('match', '^ansible_cmdb_report_output_.*$') | list }}"


- name: "Create json path"
  ansible.builtin.file:
    path: "{{ ansible_cmdb_server_json_path }}"
    state: directory
    owner: "{{ ansible_cmdb_webserver_owner }}"
    group: "{{ ansible_cmdb_webserver_group }}"
    mode: "{{ ansible_cmdb_webserver_mode_folder }}"
  when: ansible_host == ansible_cmdb_webserver_hostname
  delegate_to: "{{ ansible_cmdb_webserver_hostname }}"
  become: true

- name: "Copy Json file to Webserver"
  ansible.builtin.copy:
    content: "[{\"{{ inventory_hostname }}\":{{ ansible_cmdb_report | to_json }} }]"
    dest: "{{ ansible_cmdb_server_json_path }}/{{ inventory_hostname }}.json"
    owner: "{{ ansible_cmdb_webserver_owner }}"
    group: "{{ ansible_cmdb_webserver_group }}"
    mode: "{{ ansible_cmdb_webserver_mode_files }}"
  delegate_to: "{{ ansible_cmdb_webserver_hostname }}"
  become: true

- name: "Create server path"
  ansible.builtin.file:
    path: "{{ ansible_cmdb_webserver_path }}/servers"
    state: directory
    owner: "{{ ansible_cmdb_webserver_owner }}"
    group: "{{ ansible_cmdb_webserver_group }}"
    mode: "{{ ansible_cmdb_webserver_mode_folder }}"
  when: ansible_host == ansible_cmdb_webserver_hostname
  delegate_to: "{{ ansible_cmdb_webserver_hostname }}"
  become: true

- name: "Copy Server html to Webserver"
  ansible.builtin.template:
    src: ./html/servers/server.html
    dest: "{{ ansible_cmdb_webserver_path }}/servers/{{ inventory_hostname }}.html"
    owner: "{{ ansible_cmdb_webserver_owner }}"
    group: "{{ ansible_cmdb_webserver_group }}"
    mode: "{{ ansible_cmdb_webserver_mode_files }}"
  delegate_to: "{{ ansible_cmdb_webserver_hostname }}"
  become: true

# TODO: delete files from json dir, older x days to avoid
# having not existing servers in the list which are removed
# from inventory

- name: "Gather and merge json Files"
  ansible.builtin.shell:
    cmd: |
      set -o pipefail |
      cat {{ ansible_cmdb_server_json_path }}/*.json |
      jq -s add > {{ ansible_cmdb_webserver_path }}/all.json
  when: ansible_host == ansible_cmdb_webserver_hostname
  delegate_to: "{{ ansible_cmdb_webserver_hostname }}"
  become: true
  changed_when: true

- name: "Read all.json"
  ansible.builtin.slurp:
    src: "{{ ansible_cmdb_webserver_path }}/all.json"
  register: ansible_cmdb_all_json
  when: ansible_host == ansible_cmdb_webserver_hostname
  delegate_to: "{{ ansible_cmdb_webserver_hostname }}"
  become: true

- name: "Copy index html"
  ansible.builtin.template:
    src: ./html/index.html
    dest: "{{ ansible_cmdb_webserver_path }}/index.html"
    owner: "{{ ansible_cmdb_webserver_owner }}"
    group: "{{ ansible_cmdb_webserver_group }}"
    mode: "{{ ansible_cmdb_webserver_mode_files }}"
  delegate_to: "{{ ansible_cmdb_webserver_hostname }}"
  when: ansible_host == ansible_cmdb_webserver_hostname
  become: true
